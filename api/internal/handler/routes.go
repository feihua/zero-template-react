// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	system "zero-template-react/api/internal/handler/system"
	"zero-template-react/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CheckUrl},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/user/list",
					Handler: system.UserListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/user/view",
					Handler: system.UserViewHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/user/save",
					Handler: system.UserSaveHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/user/update",
					Handler: system.UserUpdateHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/user/updateStatus",
					Handler: system.UserStatusUpdateHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/user/delete",
					Handler: system.UserDeleteHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/user/update/password",
					Handler: system.UserUpdatePasswordHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/role/list",
					Handler: system.RoleListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/role/view",
					Handler: system.RoleViewHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/role/save",
					Handler: system.RoleSaveHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/role/update",
					Handler: system.RoleUpdateHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/role/updateStatus",
					Handler: system.RoleStatusUpdateHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/role/delete",
					Handler: system.RoleDeleteHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/role/user/list",
					Handler: system.RoleUserListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/role/user/save",
					Handler: system.RoleUserSaveHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/menu/list",
					Handler: system.MenuListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/menu/view",
					Handler: system.MenuViewHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/menu/save",
					Handler: system.MenuSaveHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/menu/update",
					Handler: system.MenuUpdateHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/menu/updateStatus",
					Handler: system.MenuStatusUpdateHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/menu/delete",
					Handler: system.MenuDeleteHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/menu/role/list",
					Handler: system.MenuRoleListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/menu/role/save",
					Handler: system.MenuRoleSaveHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/menu/user/list",
					Handler: system.MenuUserListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/enum/list",
					Handler: system.EnumListHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/apis/system/pc/sys"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/user/login/password",
				Handler: system.UserLoginHandler(serverCtx),
			},
		},
		rest.WithPrefix("/apis/system/pc/sys"),
	)
}
