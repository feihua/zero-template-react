syntax = "v1"

info(
	title: "zero-template-react"
	desc: "react版本模板"
	author: "liufeihua"
	email: "1002219331@qq.com"
	version: "v1.0"
)

type UserLoginReq {
	Mobile   string `json:"mobile"`
	Password string `json:"password"`
}

type UserLoginResp {
	Code   int64         `json:"code"`
	Msg    string        `json:"msg"`
	Status string        `json:"status"`
	Data   UserLoginData `json:"data"`
}

type UserLoginData {
	UserNo int64  `json:"userNo"`
	Mobile string `json:"mobile"`
	Token  string `json:"token"`
}

type UserListReq {
	Current  int64  `json:"current,default=1"`
	PageSize int64  `json:"pageSize,default=20"`
	Mobile   string `json:"mobile,optional"`
	StatusID string `json:"statusId,optional"`
}

type UserListResp {
	Code     int64      `json:"code"`
	Msg      string     `json:"msg"`
	Data     []UserList `json:"data"`
	Current  int64      `json:"current,default=1"`
	PageSize int64      `json:"pageSize,default=20"`
	Success  bool       `json:"success"`
	Total    int64      `json:"total"`
}

type UserList {
	Id         int64  `json:"id"`
	StatusID   int64  `json:"statusId"`
	Sort       int64  `json:"sort"`
	UserNo     int64  `json:"userNo"`
	Mobile     string `json:"mobile"`
	RealName   string `json:"realName"`
	Remark     string `json:"remark"`
	CreateTime string `json:"createTime"`
	UpdateTime string `json:"updateTime"`
}

type UserViewReq {
	Id int64 `json:"id"`
}
type UserViewResp {
	Code int64        `json:"code"`
	Msg  string       `json:"msg"`
	Data UserViewData `json:"data"`
}
type UserViewData {
	Id       int64  `json:"id"`
	StatusID int64  `json:"statusId"`
	Sort     int64  `json:"sort"`
	UserNo   int64  `json:"userNo"`
	Mobile   string `json:"mobile"`
	RealName string `json:"realName"`
	Remark   string `json:"remark"`
}

type UserSaveReq {
	Mobile   string `json:"mobile"`
	RealName string `json:"realName"`
	Remark   string `json:"remark"`
}
type UserSaveResp {
	Timestamp string `json:"timestamp"`
	Path      string `json:"path"`
	Status    int64  `json:"status"`
	Error     string `json:"error"`
	Message   string `json:"message"`
	RequestID string `json:"requestId"`
	Code      int64  `json:"code"`
	Msg       string `json:"msg"`
}

type UserUpdateReq {
	Id       int64  `json:"id"`
	Mobile   string `json:"mobile"`
	RealName string `json:"realName"`
	Remark   string `json:"remark"`
	StatusID int64  `json:"statusId"`
	Sort     int64  `json:"sort"`
}
type UserUpdateResp {
	Timestamp string `json:"timestamp"`
	Path      string `json:"path"`
	Status    int64  `json:"status"`
	Error     string `json:"error"`
	Message   string `json:"message"`
	RequestID string `json:"requestId"`
	Code      int64  `json:"code"`
	Msg       string `json:"msg"`
}

type UserStatusUpdateReq {
	Id       int64 `json:"id"`
	StatusID int64 `json:"statusId"`
}
type UserStatusUpdateResp {
	Timestamp string `json:"timestamp"`
	Path      string `json:"path"`
	Status    int64  `json:"status"`
	Error     string `json:"error"`
	Message   string `json:"message"`
	RequestID string `json:"requestId"`
	Code      int64  `json:"code"`
	Msg       string `json:"msg"`
}

type UserDeleteReq {
	Ids []int64 `json:"ids"`
}
type UserDeleteResp {
	Timestamp string `json:"timestamp"`
	Path      string `json:"path"`
	Status    int64  `json:"status"`
	Error     string `json:"error"`
	Message   string `json:"message"`
	RequestID string `json:"requestId"`
	Code      int64  `json:"code"`
	Msg       string `json:"msg"`
}

type UserUpdatePasswordReq {
	Id        int64  `json:"id,optional"`
	MobilePsw string `json:"mobilePsw"`
	RePwd     string `json:"rePwd"`
}
type UserUpdatePasswordResp {
	Timestamp string `json:"timestamp"`
	Path      string `json:"path"`
	Status    int64  `json:"status"`
	Error     string `json:"error"`
	Message   string `json:"message"`
	RequestID string `json:"requestId"`
	Code      int64  `json:"code"`
	Msg       string `json:"msg"`
}

type RoleListReq {
	Current  int64  `json:"current,default=1"`
	PageSize int64  `json:"pageSize,default=20"`
	StatusID string `json:"statusId,optional"`
	RoleName string `json:"roleName,optional"`
}

type RoleListResp {
	Code     int64      `json:"code"`
	Msg      string     `json:"msg"`
	Data     []RoleList `json:"data"`
	Current  int64      `json:"current,default=1"`
	PageSize int64      `json:"pageSize,default=20"`
	Success  bool       `json:"success"`
	Total    int64      `json:"total"`
}

type RoleList {
	Id         int64  `json:"id"`
	StatusID   int64  `json:"statusId"`
	Sort       int64  `json:"sort"`
	RoleName   string `json:"roleName"`
	Remark     string `json:"remark"`
	CreateTime string `json:"createTime"`
	UpdateTime string `json:"updateTime"`
}

type RoleViewReq {
	Id int64 `json:"id"`
}
type RoleViewResp {
	Code int64        `json:"code"`
	Msg  string       `json:"msg"`
	Data RoleViewData `json:"data"`
}
type RoleViewData {
	Id       int64  `json:"id"`
	StatusID int64  `json:"statusId"`
	Sort     int64  `json:"sort"`
	RoleName string `json:"roleName"`
	Remark   string `json:"remark"`
}

type RoleSaveReq {
	RoleName string `json:"roleName"`
	Remark   string `json:"remark"`
	Sort     string `json:"sort"`
}
type RoleSaveResp {
	Timestamp string `json:"timestamp"`
	Path      string `json:"path"`
	Status    int64  `json:"status"`
	Error     string `json:"error"`
	Message   string `json:"message"`
	RequestID string `json:"requestId"`
	Code      int64  `json:"code"`
	Msg       string `json:"msg"`
}

type RoleUpdateReq {
	Id       int64  `json:"id"`
	RoleName string `json:"roleName"`
	Remark   string `json:"remark"`
	StatusID int64  `json:"statusId"`
	Sort     int64  `json:"sort"`
}
type RoleUpdateResp {
	Timestamp string `json:"timestamp"`
	Path      string `json:"path"`
	Status    int64  `json:"status"`
	Error     string `json:"error"`
	Message   string `json:"message"`
	RequestID string `json:"requestId"`
	Code      int64  `json:"code"`
	Msg       string `json:"msg"`
}

type RoleStatusUpdateReq {
	Id       int64 `json:"id"`
	StatusID int64 `json:"statusId"`
}
type RoleStatusUpdateResp {
	Timestamp string `json:"timestamp"`
	Path      string `json:"path"`
	Status    int64  `json:"status"`
	Error     string `json:"error"`
	Message   string `json:"message"`
	RequestID string `json:"requestId"`
	Code      int64  `json:"code"`
	Msg       string `json:"msg"`
}

type RoleDeleteReq {
	Ids []int64 `json:"ids"`
}
type RoleDeleteResp {
	Timestamp string `json:"timestamp"`
	Path      string `json:"path"`
	Status    int64  `json:"status"`
	Error     string `json:"error"`
	Message   string `json:"message"`
	RequestID string `json:"requestId"`
	Code      int64  `json:"code"`
	Msg       string `json:"msg"`
}

type RoleUserListReq {
	UserId int64 `json:"userId"`
}

type RoleUserListResp {
	Code int64            `json:"code"`
	Msg  string           `json:"msg"`
	Data RoleUserListData `json:"data"`
}

type RoleUserListData {
	AllRoles       []RoleUserList `json:"allRoles"`
	AllUserRoleIds []int64        `json:"allUserRoleIds"`
}

type RoleUserList {
	Id         int64  `json:"id"`
	StatusID   int64  `json:"statusId"`
	Sort       int64  `json:"sort"`
	RoleName   string `json:"roleName"`
	Remark     string `json:"remark"`
	CreateTime string `json:"createTime"`
	UpdateTime string `json:"updateTime"`
}

type RoleUserSaveReq {
	UserId  int64   `json:"userId"`
	RoleIds []int64 `json:"roleIds"`
}
type RoleUserSaveResp {
	Timestamp string `json:"timestamp"`
	Path      string `json:"path"`
	Status    int64  `json:"status"`
	Error     string `json:"error"`
	Message   string `json:"message"`
	RequestID string `json:"requestId"`
	Code      int64  `json:"code"`
	Msg       string `json:"msg"`
}

type MenuListReq {
	MenuName string `json:"menuName,optional"`
}
type MenuListResp {
	Code int64      `json:"code"`
	Msg  string     `json:"msg"`
	Data []MenuList `json:"data"`
}

type MenuList {
	Id       int64  `json:"id"`
	StatusID int64  `json:"statusId"`
	Sort     int64  `json:"sort"`
	ParentID int64  `json:"parentId"`
	MenuName string `json:"menuName"`
	Label    string `json:"label"`
	MenuURL  string `json:"menuUrl"`
	Icon     string `json:"icon"`
	ApiUrl   string `json:"apiUrl"`
	Remark   string `json:"remark"`
	//	HiddenType interface{} `json:"hiddenType"`
	MenuType   int64  `json:"menuType"`
	CreateTime string `json:"createTime"`
	UpdateTime string `json:"updateTime"`
}

type MenuViewReq {
	Id int64 `json:"id"`
}
type MenuViewResp {
	Code int64        `json:"code"`
	Msg  string       `json:"msg"`
	Data MenuViewData `json:"data"`
}
type MenuViewData {
	Id       int64  `json:"id"`
	StatusID int64  `json:"statusId"`
	Sort     int64  `json:"sort"`
	ParentID int64  `json:"parentId"`
	MenuName string `json:"menuName"`
	Label    string `json:"label"`
	MenuURL  string `json:"menuUrl"`
	//	MenuIcon   interface{} `json:"menuIcon"`
	ApiUrl string `json:"apiUrl"`
	Remark string `json:"remark"`
	//	HiddenType interface{} `json:"hiddenType"`
	MenuType int64 `json:"menuType"`
}
type MenuSaveReq {
	MenuName string `json:"menuName"`
	MenuType int64  `json:"menuType"`
	MenuUrl  string `json:"menuUrl"`
	StatusId int64  `json:"statusId,default=1"`
	ParentId int64  `json:"parentId,default=0"`
	Remark   string `json:"remark"`
	Sort     int64  `json:"sort"`
	Icon     string `json:"icon"`
}
type MenuSaveResp {
	Timestamp string `json:"timestamp"`
	Path      string `json:"path"`
	Status    int64  `json:"status"`
	Error     string `json:"error"`
	Message   string `json:"message"`
	RequestID string `json:"requestId"`
	Code      int64  `json:"code"`
	Msg       string `json:"msg"`
}

type MenuUpdateReq {
	Id       int64  `json:"id"`
	StatusId int64  `json:"statusId"`
	Sort     int64  `json:"sort"`
	ParentId int64  `json:"parentId"`
	MenuName string `json:"menuName"`
	MenuUrl  string `json:"menuUrl"`
	Icon     string `json:"icon"`
	ApiUrl   string `json:"apiUrl"`
	Remark   string `json:"remark"`
	MenuType int64  `json:"menuType"`
}
type MenuUpdateResp {
	Timestamp string `json:"timestamp"`
	Path      string `json:"path"`
	Status    int64  `json:"status"`
	Error     string `json:"error"`
	Message   string `json:"message"`
	RequestID string `json:"requestId"`
	Code      int64  `json:"code"`
	Msg       string `json:"msg"`
}

type MenuStatusUpdateReq {
	Id       int64 `json:"id"`
	StatusID int64 `json:"statusId"`
}
type MenuStatusUpdateResp {
	Timestamp string `json:"timestamp"`
	Path      string `json:"path"`
	Status    int64  `json:"status"`
	Error     string `json:"error"`
	Message   string `json:"message"`
	RequestID string `json:"requestId"`
	Code      int64  `json:"code"`
	Msg       string `json:"msg"`
}

type MenuDeleteReq {
	Ids []int64 `json:"ids"`
}
type MenuDeleteResp {
	Timestamp string `json:"timestamp"`
	Path      string `json:"path"`
	Status    int64  `json:"status"`
	Error     string `json:"error"`
	Message   string `json:"message"`
	RequestID string `json:"requestId"`
	Code      int64  `json:"code"`
	Msg       string `json:"msg"`
}

type MenuRoleListReq {
	RoleId int64 `json:"roleId"`
}

type MenuRoleListResp {
	Code int64            `json:"code"`
	Msg  string           `json:"msg"`
	Data MenuRoleListData `json:"data"`
}

type MenuRoleList {
	Id       int64  `json:"id"`
	ParentID int64  `json:"parentId"`
	Title    string `json:"title"`
	Key      string `json:"key"`
}

type MenuRoleListData {
	RoleMenus    []int64        `json:"roleMenus"`
	MenuRoleList []MenuRoleList `json:"menuRoleList"`
}

type MenuRoleSaveReq {
	MenuIds []int64 `json:"menuIds"`
	RoleId  int64   `json:"roleId"`
}
type MenuRoleSaveResp {
	Timestamp string `json:"timestamp"`
	Path      string `json:"path"`
	Status    int64  `json:"status"`
	Error     string `json:"error"`
	Message   string `json:"message"`
	RequestID string `json:"requestId"`
	Code      int64  `json:"code"`
	Msg       string `json:"msg"`
}

type MenuUserListResp {
	Code int64        `json:"code"`
	Msg  string       `json:"msg"`
	Data MenuUserData `json:"data"`
}

type MenuUserData {
	SysMenu []MenuUserList `json:"sysMenu"`
	BtnMenu []string       `json:"btnMenu"`
	Avatar  string         `json:"avatar"`
	Name    string         `json:"name"`
}

type MenuUserList {
	Id       int64  `json:"id"`
	ParentId int64  `json:"parentId"`
	Name     string `json:"name"`
	Path     string `json:"path"`
	ApiUrl   string `json:"apiUrl"`
	MenuType int64  `json:"menuType"`
	Icon     string `json:"icon"`
}

type EnumReq {
	EnumName string `json:"enumName"`
}

type EnumResp {
	Code int64      `json:"code"`
	Msg  string     `json:"msg"`
	Data []EnumData `json:"data"`
}

type EnumData {
	Code  int64  `json:"code"`
	Color string `json:"color"`
	Name  string `json:"name"`
	Desc  string `json:"desc"`
}

@server(
	jwt: Auth
	middleware: CheckUrl
	group: system
	prefix: /api/system
)
service admin {
	
	@handler userList
	post /user/list(UserListReq) returns (UserListResp)
	@handler userView
	post /user/view(UserViewReq) returns (UserViewResp)
	@handler userSave
	post /user/save(UserSaveReq) returns (UserSaveResp)
	@handler userUpdate
	post /user/update(UserUpdateReq) returns (UserUpdateResp)
	@handler userStatusUpdate
	post /user/updateStatus(UserStatusUpdateReq) returns (UserStatusUpdateResp)
	@handler userDelete
	post /user/delete(UserDeleteReq) returns (UserDeleteResp)
	@handler userUpdatePassword
	post /user/updatePassword(UserUpdatePasswordReq) returns (UserUpdatePasswordResp)
	
	@handler roleList
	post /role/list(RoleListReq) returns (RoleListResp)
	@handler roleView
	post /role/view(RoleViewReq) returns (RoleViewResp)
	@handler roleSave
	post /role/save(RoleSaveReq) returns (RoleSaveResp)
	@handler roleUpdate
	post /role/update(RoleUpdateReq) returns (RoleUpdateResp)
	@handler roleStatusUpdate
	post /role/updateStatus(RoleStatusUpdateReq) returns (RoleStatusUpdateResp)
	@handler roleDelete
	post /role/delete(RoleDeleteReq) returns (RoleDeleteResp)
	@handler roleUserList
	post /role/userRoleList(RoleUserListReq) returns (RoleUserListResp)
	@handler roleUserSave
	post /role/userRoleSave(RoleUserSaveReq) returns (RoleUserSaveResp)
	
	@handler menuList
	post /menu/list(MenuListReq) returns (MenuListResp)
	@handler menuView
	post /menu/view(MenuViewReq) returns (MenuViewResp)
	@handler menuSave
	post /menu/save(MenuSaveReq) returns (MenuSaveResp)
	@handler menuUpdate
	post /menu/update(MenuUpdateReq) returns (MenuUpdateResp)
	@handler menuStatusUpdate
	post /menu/updateStatus(MenuStatusUpdateReq) returns (MenuStatusUpdateResp)
	@handler menuDelete
	post /menu/delete(MenuDeleteReq) returns (MenuDeleteResp)
	@handler menuRoleList
	post /menu/roleMenuList(MenuRoleListReq) returns (MenuRoleListResp)
	@handler menuRoleSave
	post /menu/roleMenuSave(MenuRoleSaveReq) returns (MenuRoleSaveResp)
	@handler menuUserList
	get /menu/userMenuList returns (MenuUserListResp)
	
	@handler enumList
	post /enum/list(EnumReq) returns (EnumResp)
	
}

@server(
	group: system
	prefix: /api/system
)
service admin {
	@handler userLogin
	post /user/login(UserLoginReq) returns (UserLoginResp)
}